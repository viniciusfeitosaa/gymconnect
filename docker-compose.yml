version: '3.8'

services:
  gymconnect:
    build: .
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - JWT_SECRET=gymconnect-dev-secret
    volumes:
      - ./server:/app/server
      - ./client:/app/client
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/auth/me', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Banco de dados PostgreSQL para produção
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: gymconnect
      POSTGRES_USER: gymconnect
      POSTGRES_PASSWORD: gymconnect123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gymconnect"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx para produção
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./client/build:/usr/share/nginx/html
    depends_on:
      - gymconnect
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
